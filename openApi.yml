openapi: '3.0.2'
info:
  title: Upload Service
  description: Microservicio de subida de im√°genes.
  version: '1.0'
servers:
  - url: https://localhost:8000/
paths:

  /asset:
     get:
       summary: "Returns a list with all the assets in the database."
       responses:
        '200':
          description: Everything went OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/assets"
     post:
       summary: "Add a new asset to the database."
       requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createModifyAsset"
       responses:
         '201':
           description: "The asset was correctly created. The URI of the new asset is in the Location header."
           content:
            application/json:
              schema:
                $ref: "#/components/schemas/assets"
         "400":
            description: "Bad request. One or more input fields are not a string or they are whitespace."
            content:
             application/json:
              schema:
                $ref: "#/components/schemas/notValid"

  /asset/{id}:
    get:
      parameters:
      - Schema:
        $ref: "#/components/parameters/paramId"
      summary: "Returns the image of the DB"
      responses:
        '200':
          description: Everything is OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/asset"
        "400":
          description: "An asset with that id could not be found, since it's not a valid id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notValid"

        '404':
          description: An asset with that id could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notFound"
    put:
      summary: "Update an existing asset of the DB"
      parameters:
      - Schema:
        $ref: "#/components/parameters/paramId"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createModifyAsset"
      responses:
        '200':
          description: Everything is OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successful"
        "400":
          description: "An asset with that id could not be found, since it's not a valid id"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notValid"
        "404":
          description: An asset with that id could not be found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notFound"
    delete:
      summary: "Deletes an asset from the database."
      parameters:
      - Schema:
        $ref: "#/components/parameters/paramId"
      responses:
        '204':
          description: "No content. The asset was correctly deleted."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/successful"
        "404":
          description: "Not found. An asset with the specified id could not be found."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/notFound"
components:
  parameters:
    paramId:
      description: Asset's ID
      name: id
      in: path
      required: true
      schema:
        $ref: "#/components/schemas/paramId"
  schemas:
    paramId:
      type: string
      description: Asset's ID
    successful:
      type: string
      description: Everything is OK
    notFound:
      type: string
      description: Asset not found
    notValid:
      type: string
      description: Invalid id
    createModifyAsset:
      type: object
      properties:
        file:
          type: string
          description: Asset's URL stored in Google Photos
        name:
          type: string
          description: Asset's name
        user:
          type: string
          description: User that owns the asset
    asset:
      type: object
      properties:
        _id:
          type: string
          description: Asset's ID
        file:
          type: string
          description: Asset's URL stored in Google Photos
        name:
          type: string
          description: Asset's name
        user:
          type: string
          description: User that owns the asset
        createdAt:
          type: string
          description: Creation date
        updatedAt:
          type: string
          description: Last updated date
        __v:
          type: integer
          description: Asset's version
    assets:
      type: array
      items:
        type: object
        properties:
          _id:
            type: string
            description: Asset's ID
          file:
            type: string
            description: Asset's URL stored in Google Photos
          name:
            type: string
            description: Asset's name
          user:
            type: string
            description: User that owns the asster
          createdAt:
            type: string
            description: Creation date
          updatedAt:
            type: string
            description: Last updated date
          __v:
            type: integer
            description: Asset's version